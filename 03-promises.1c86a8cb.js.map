{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAiBC,GAEb,OAAOA,GAAOA,EAAIC,cAAgBC,OAAS,gBAAkBF,C,mBCL3DG,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAG3C,SAASG,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC/BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAZiBN,SAASC,cAAc,SAoC/BY,iBAAiB,UApB7B,SAAwBC,GACtBA,EAAMC,iBAEN,IAAIC,EAASC,OAAOd,EAAYT,OAChCwB,QAAQC,SAAiB,IAANH,EAAM,YAAbI,EAAA3B,EAAA,CAAOuB,IAIjB,IAHF,IAAIK,EAAiBJ,OAAOf,EAAUR,OAClC4B,EAAkBL,OAAOlB,EAAWL,OAE9B6B,EAAI,EAAGA,GAAKP,EAAQO,IAChCnB,EAAcmB,EAAGD,GAAiBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClDc,EAAAM,GAASC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBc,EAAAM,GAASC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAErEgB,GAAmBD,C","sources":["node_modules/@swc/helpers/lib/_type_of.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst promiseForm = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\nsetTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay})\n  }\n}, delay)\n  })\n}\n\nfunction submitOperator(event) {\n  event.preventDefault();\n\n  let amount = Number(inputAmount.value);\n  console.log(typeof amount)\n  let delayStepValue = Number(delayStep.value);\n  let firstDelayValue = Number(firstDelay.value);\n\n    for(let i = 1; i <= amount; i++) {\ncreatePromise(i, firstDelayValue).then(({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n})\n.catch(({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n});\nfirstDelayValue += delayStepValue\n    }\n}\n\n\npromiseForm.addEventListener(\"submit\", submitOperator)\n"],"names":["Object","defineProperty","$f59351132b4b3cee$exports","value","default","obj","constructor","Symbol","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","amount","Number","console","log","$parcel$interopDefault","delayStepValue","firstDelayValue","i","then","param","$iU1Pc","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1c86a8cb.js.map"}